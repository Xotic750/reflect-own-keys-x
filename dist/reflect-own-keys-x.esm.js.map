{"version":3,"sources":["../src/reflect-own-keys-x.js"],"names":[],"mappings":"AAAA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,OAAP,MAAoB,YAApB;AACA,OAAO,gBAAP,MAA6B,sBAA7B;AACA,OAAO,iBAAP,MAA8B,uBAA9B;AACA,OAAO,cAAP,MAA2B,oBAA3B;AACA,OAAO,mBAAP,MAAgC,0BAAhC;AACA,OAAO,qBAAP,MAAkC,4BAAlC;AACA,OAAO,SAAP,MAAsB,cAAtB;AAEA;;AACA,IAAM,GAAG,GAAG,OAAO,CAAC,OAApB;AACA,IAAM,aAAa,GAAG,gBAAgB,IAAI,OAAO,GAAP,KAAe,UAAnC,IAAiD,GAAvE;;AAEA,IAAM,YAAY,GAAG,SAAS,YAAT,CAAsB,CAAtB,EAAyB,MAAzB,EAAiC;AACpD,SAAO,CAAC,CAAC,KAAF,KAAY,KAAZ,IAAqB,OAAO,CAAC,CAAC,CAAC,KAAH,CAA5B,IAAyC,CAAC,CAAC,KAAF,CAAQ,MAAR,KAAmB,MAAnE;AACD,CAFD;;AAIA,IAAM,MAAM,GAAG,SAAS,MAAT,CAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB;AACtC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAV;AACA,MAAM,CAAC,GAAG,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAV;AAEA,SAAQ,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK,CAAlB,IAAyB,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK,CAAjD;AACD,CALD;;AAOA,IAAM,KAAK,GAAG,SAAS,KAAT,GAAiB;AAC7B,SAAO,OAAO,CAAC,aAAD,EAAgB,CAAhB,CAAP,CAA0B,KAAjC;AACD,CAFD;;AAIA,IAAM,KAAK,GAAG,SAAS,KAAT,GAAiB;AAC7B,MAAM,GAAG,GAAG,OAAO,CAAC,aAAD,EAAgB;AAAC,IAAA,CAAC,EAAE,CAAJ;AAAO,IAAA,CAAC,EAAE;AAAV,GAAhB,CAAnB;AAEA,SAAO,YAAY,CAAC,GAAD,EAAM,CAAN,CAAZ,IAAwB,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAArC;AACD,CAJD;;AAMA,IAAM,KAAK,GAAG,SAAS,KAAT,GAAiB;AAC7B,MAAI,iBAAJ,EAAuB;AACrB;AACA,QAAM,MAAM,GAAG,MAAM,CAAC,EAAD,CAArB;AACA,QAAM,OAAO,GAAG;AAAC,MAAA,CAAC,EAAE;AAAJ,KAAhB;AACA,IAAA,OAAO,CAAC,MAAD,CAAP,GAAkB,CAAlB;AACA,QAAM,GAAG,GAAG,OAAO,CAAC,aAAD,EAAgB,OAAhB,CAAnB;AAEA,WAAO,YAAY,CAAC,GAAD,EAAM,CAAN,CAAZ,IAAwB,MAAM,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,CAArC;AACD;;AAED,SAAO,IAAP;AACD,CAZD;;AAcA,IAAM,SAAS,GAAG,SAAS,CAAC,aAAD,CAAT,IAA4B,KAAK,EAAjC,IAAuC,KAAK,EAA5C,IAAkD,KAAK,EAAzE;;AAEA,IAAM,cAAc,GAAG,SAAS,cAAT,GAA0B;AAAA,MACxC,MADwC,GAC9B,EAD8B,CACxC,MADwC;AAG/C,SAAO,SAAS,OAAT,CAAiB,MAAjB,EAAyB;AAC9B,IAAA,cAAc,CAAC,MAAD,CAAd;AAEA,WAAO,MAAM,CAAC,IAAP,CAAY,mBAAmB,CAAC,MAAD,CAA/B,EAAyC,qBAAqB,CAAC,MAAD,CAA9D,CAAP;AACD,GAJD;AAKD,CARD;AAUA;;;;;;;;;;AAQA,IAAM,cAAc,GAAG,SAAS,GAAG,aAAH,GAAmB,cAAc,EAAjE;AAEA,eAAe,cAAf","file":"reflect-own-keys-x.esm.js","sourcesContent":["import attempt from 'attempt-x';\nimport isArray from 'is-array-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport hasReflectSupport from 'has-reflect-support-x';\nimport assertIsObject from 'assert-is-object-x';\nimport getOwnPropertyNames from 'get-own-property-names-x';\nimport getOwnPropertySymbols from 'get-own-property-symbols-x';\nimport toBoolean from 'to-boolean-x';\n\n/* eslint-disable-next-line compat/compat */\nconst rok = Reflect.ownKeys;\nconst nativeOwnKeys = hasSymbolSupport && typeof rok === 'function' && rok;\n\nconst isCorrectRes = function isCorrectRes(r, length) {\n  return r.threw === false && isArray(r.value) && r.value.length === length;\n};\n\nconst either = function either(r, a, b) {\n  const x = r.value[0];\n  const y = r.value[1];\n\n  return (x === a && y === b) || (x === b && y === a);\n};\n\nconst test1 = function test1() {\n  return attempt(nativeOwnKeys, 1).threw;\n};\n\nconst test2 = function test2() {\n  const res = attempt(nativeOwnKeys, {a: 1, b: 2});\n\n  return isCorrectRes(res, 2) && either(res, 'a', 'b');\n};\n\nconst test3 = function test3() {\n  if (hasReflectSupport) {\n    /* eslint-disable-next-line compat/compat */\n    const symbol = Symbol('');\n    const testObj = {a: 1};\n    testObj[symbol] = 2;\n    const res = attempt(nativeOwnKeys, testObj);\n\n    return isCorrectRes(res, 2) && either(res, 'a', symbol);\n  }\n\n  return true;\n};\n\nconst isWorking = toBoolean(nativeOwnKeys) && test1() && test2() && test3();\n\nconst implementation = function implementation() {\n  const {concat} = [];\n\n  return function ownKeys(target) {\n    assertIsObject(target);\n\n    return concat.call(getOwnPropertyNames(target), getOwnPropertySymbols(target));\n  };\n};\n\n/**\n * This method returns an array of the target object's own property keys.\n * Its return value is equivalent to Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target)).\n *\n * @param {*} target - The target object from which to get the own keys.\n * @throws {TypeError} If target is not an Object.\n * @returns {object} An Array of the target object's own property keys.\n */\nconst reflectOwnKeys = isWorking ? nativeOwnKeys : implementation();\n\nexport default reflectOwnKeys;\n"]}